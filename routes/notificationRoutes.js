/*const express = require('express');
const router = express.Router();
const notificationController = require('../controllers/notificationController');
const { verifyToken } = require('../middleware/authMiddleware');

// ‚úÖ Route pour r√©cup√©rer les notifications
router.get('/', verifyToken, notificationController.getNotifications);

// ‚úÖ Route pour marquer une notification comme lue
router.put('/:id/read', verifyToken, notificationController.markAsRead);

module.exports = router;
*/
// backend/routes/notificationRoutes.js
const express = require('express');
const router = express.Router();
const notificationController = require('../controllers/notificationController');
const { verifyToken } = require('../middleware/authMiddleware');
const pool = require('../config/db');

// üõ°Ô∏è Route 1 : R√©cup√©rer toutes les notifications d'un utilisateur
router.get('/', verifyToken, notificationController.getNotifications);

// üõ°Ô∏è Route 2 : Marquer une notification comme lue
router.put('/:id/read', verifyToken, notificationController.markAsRead);

// üõ°Ô∏è Route 3 : Marquer toutes les notifications comme lues
router.put('/mark-all-read', verifyToken, notificationController.markAllAsRead);

// üõ°Ô∏è Route 4 : Supprimer une notification
router.delete('/:id', verifyToken, notificationController.deleteNotification);

// üß™ Route pour cr√©er des notifications de test (√† supprimer en production)
router.post('/create-test', verifyToken, async (req, res) => {
  try {
    const userId = req.user.id;
    const { createNotification } = require('../controllers/notificationController');
    
    const testNotifications = [
      {
        message: "üéâ F√©licitations! Votre comp√©tence 'React.js' a re√ßu un excellent avis de 5 √©toiles!",
        type: 'success'
      },
      {
        message: "üìù Vous avez re√ßu un nouvel avis sur votre comp√©tence 'Python'. Consultez votre profil pour plus de d√©tails.",
        type: 'info'
      },
      {
        message: "‚ö†Ô∏è N'oubliez pas de mettre √† jour votre profil avec vos derni√®res comp√©tences.",
        type: 'warning'
      },
      {
        message: "‚ú® Votre comp√©tence 'Design UI/UX' a √©t√© ajout√©e avec succ√®s √† votre profil!",
        type: 'success'
      },
      {
        message: "üí¨ Un utilisateur souhaite √©changer ses comp√©tences avec vous. Consultez vos messages.",
        type: 'info'
      }
    ];
    
    for (const notif of testNotifications) {
      await createNotification(userId, notif.message, notif.type);
    }
    
    res.json({ message: "Notifications de test cr√©√©es avec succ√®s!" });
  } catch (error) {
    console.error('Erreur cr√©ation notifications test:', error);
    res.status(500).json({ error: 'Erreur serveur' });
  }
});

module.exports = router;
